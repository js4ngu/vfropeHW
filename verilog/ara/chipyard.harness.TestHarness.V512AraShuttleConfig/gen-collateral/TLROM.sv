// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module TLROM(	// @[generators/rocket-chip/src/main/scala/devices/tilelink/BootROM.scala:41:9]
  input         clock,	// @[generators/rocket-chip/src/main/scala/devices/tilelink/BootROM.scala:41:9]
  input         reset,	// @[generators/rocket-chip/src/main/scala/devices/tilelink/BootROM.scala:41:9]
  output        auto_in_a_ready,	// @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala:107:25]
  input         auto_in_a_valid,	// @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala:107:25]
  input  [2:0]  auto_in_a_bits_opcode,	// @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala:107:25]
  input  [2:0]  auto_in_a_bits_param,	// @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala:107:25]
  input  [1:0]  auto_in_a_bits_size,	// @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala:107:25]
  input  [12:0] auto_in_a_bits_source,	// @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala:107:25]
  input  [16:0] auto_in_a_bits_address,	// @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala:107:25]
  input  [7:0]  auto_in_a_bits_mask,	// @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala:107:25]
  input         auto_in_a_bits_corrupt,	// @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala:107:25]
  input         auto_in_d_ready,	// @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala:107:25]
  output        auto_in_d_valid,	// @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala:107:25]
  output [1:0]  auto_in_d_bits_size,	// @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala:107:25]
  output [12:0] auto_in_d_bits_source,	// @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala:107:25]
  output [63:0] auto_in_d_bits_data	// @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala:107:25]
);

  wire [511:0][63:0] _GEN =
    {64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h0,
     64'h73,
     64'h747075727265746E,
     64'h6900746E65726170,
     64'h2D74707572726574,
     64'h6E6900736B636F6C,
     64'h63007665646E2C76,
     64'h6373697200797469,
     64'h726F6972702D7861,
     64'h6D2C766373697200,
     64'h6863617474612D67,
     64'h7562656400646564,
     64'h6E657478652D7374,
     64'h7075727265746E69,
     64'h73656D616E2D74,
     64'h757074756F2D6B63,
     64'h6F6C6300736C6C65,
     64'h632D6B636F6C6323,
     64'h746E756F632D72,
     64'h68736D2C65766966,
     64'h6973006465696669,
     64'h6E752D6568636163,
     64'h6C6576656C2D65,
     64'h686361630073656D,
     64'h616E2D6765720073,
     64'h65676E617200656C,
     64'h646E616870007265,
     64'h6C6C6F72746E6F63,
     64'h2D74707572726574,
     64'h6E6900736C6C6563,
     64'h2D74707572726574,
     64'h6E69230074696C70,
     64'h732D626C74007375,
     64'h7461747300617369,
     64'h2C76637369720067,
     64'h6572006568636163,
     64'h2D6C6576656C2D74,
     64'h78656E0065707974,
     64'h2D756D6D00657A69,
     64'h732D626C742D6900,
     64'h737465732D626C74,
     64'h2D6900657A69732D,
     64'h65686361632D6900,
     64'h737465732D656863,
     64'h61632D6900657A69,
     64'h732D6B636F6C622D,
     64'h65686361632D6900,
     64'h746E756F632D746E,
     64'h696F706B61657262,
     64'h2D636578652D6572,
     64'h6177647261680065,
     64'h7079745F65636976,
     64'h656400657A69732D,
     64'h626C742D64007374,
     64'h65732D626C742D64,
     64'h657A69732D6568,
     64'h6361632D64007374,
     64'h65732D6568636163,
     64'h2D6400657A69732D,
     64'h6B636F6C622D6568,
     64'h6361632D64007963,
     64'h6E6575716572662D,
     64'h6B636F6C63007963,
     64'h6E6575716572662D,
     64'h65736162656D6974,
     64'h687461702D7475,
     64'h6F64747300306C61,
     64'h69726573006C6564,
     64'h6F6D00656C626974,
     64'h61706D6F6300736C,
     64'h6C65632D657A6973,
     64'h2300736C6C65632D,
     64'h7373657264646123,
     64'h900000002000000,
     64'h200000002000000,
     64'h6C6F72746E6F63,
     64'h8201000008000000,
     64'h300000000100000,
     64'h11002E010000,
     64'h800000003000000,
     64'h30303030,
     64'h3131407265747465,
     64'h732D74657365722D,
     64'h656C697401000000,
     64'h2000000006C6F72,
     64'h746E6F6382010000,
     64'h800000003000000,
     64'h10000000000210,
     64'h2E01000008000000,
     64'h300000001000000,
     64'h2F02000004000000,
     64'h300000006000000,
     64'h1E02000004000000,
     64'h300000000000000,
     64'h30747261752C6576,
     64'h696669731B000000,
     64'hD00000003000000,
     64'h500000017020000,
     64'h400000003000000,
     64'h30303030323030,
     64'h31406C6169726573,
     64'h100000002000000,
     64'h6B636F6C632D64,
     64'h657869661B000000,
     64'hC00000003000000,
     64'h6B636F6C635F,
     64'h73756273C5010000,
     64'hB00000003000000,
     64'h65CD1D53000000,
     64'h400000003000000,
     64'hB8010000,
     64'h400000003000000,
     64'h6B636F6C635F,
     64'h7375627301000000,
     64'h2000000006D656D,
     64'h8201000004000000,
     64'h300000000000100,
     64'h1002E010000,
     64'h800000003000000,
     64'h306D6F722C6576,
     64'h696669731B000000,
     64'hC00000003000000,
     64'h3030303031,
     64'h406D6F7201000000,
     64'h200000005000000,
     64'h7301000004000000,
     64'h3000000006B636F,
     64'h6C632D6465786966,
     64'h1B0000000C000000,
     64'h300000000006B63,
     64'h6F6C635F73756270,
     64'hC50100000B000000,
     64'h30000000065CD1D,
     64'h5300000004000000,
     64'h300000000000000,
     64'hB801000004000000,
     64'h300000000006B63,
     64'h6F6C635F73756270,
     64'h100000002000000,
     64'h6B636F6C632D64,
     64'h657869661B000000,
     64'hC00000003000000,
     64'h6B636F6C635F,
     64'h7375626DC5010000,
     64'hB00000003000000,
     64'h65CD1D53000000,
     64'h400000003000000,
     64'hB8010000,
     64'h400000003000000,
     64'h6B636F6C635F,
     64'h7375626D01000000,
     64'h200000006000000,
     64'h7301000004000000,
     64'h300000001000000,
     64'hC02000004000000,
     64'h300000001000000,
     64'hF901000004000000,
     64'h3000000006C6F72,
     64'h746E6F6382010000,
     64'h800000003000000,
     64'h40000000C,
     64'h2E01000008000000,
     64'h300000009000000,
     64'h40000000B000000,
     64'h4000000D8010000,
     64'h1000000003000000,
     64'h5E01000000000000,
     64'h300000000306369,
     64'h6C702C7663736972,
     64'h1B0000000C000000,
     64'h300000001000000,
     64'h4D01000004000000,
     64'h300000000000000,
     64'h3030303030306340,
     64'h72656C6C6F72746E,
     64'h6F632D7470757272,
     64'h65746E6901000000,
     64'h2000000006B636F,
     64'h6C632D6465786966,
     64'h1B0000000C000000,
     64'h300000000006B63,
     64'h6F6C635F73756266,
     64'hC50100000B000000,
     64'h30000000065CD1D,
     64'h5300000004000000,
     64'h300000000000000,
     64'hB801000004000000,
     64'h300000000006B63,
     64'h6F6C635F73756266,
     64'h100000002000000,
     64'h10000000300000,
     64'h2E01000008000000,
     64'h300000000000030,
     64'h726F7272652C6576,
     64'h696669731B000000,
     64'hE00000003000000,
     64'h3030303340,
     64'h6563697665642D72,
     64'h6F72726501000000,
     64'h2000000006C6F72,
     64'h746E6F6382010000,
     64'h800000003000000,
     64'h10000000000000,
     64'h2E01000008000000,
     64'h3000000FFFF0000,
     64'h4000000D8010000,
     64'h800000003000000,
     64'h6761746A,
     64'hEC01000005000000,
     64'h300000000000000,
     64'h3331302D67756265,
     64'h642C766373697200,
     64'h3331302D67756265,
     64'h642C657669666973,
     64'h1B00000021000000,
     64'h300000000003040,
     64'h72656C6C6F72746E,
     64'h6F632D6775626564,
     64'h100000002000000,
     64'h6C6F72746E6F63,
     64'h8201000008000000,
     64'h300000000100000,
     64'h10002E010000,
     64'h800000003000000,
     64'h303030303031,
     64'h4072657461672D6B,
     64'h636F6C6301000000,
     64'h2000000006C6F72,
     64'h746E6F6382010000,
     64'h800000003000000,
     64'h10000000002,
     64'h2E01000008000000,
     64'h300000007000000,
     64'h400000003000000,
     64'h4000000D8010000,
     64'h1000000003000000,
     64'h30746E69,
     64'h6C632C7663736972,
     64'h1B0000000D000000,
     64'h300000000000030,
     64'h3030303030324074,
     64'h6E696C6301000000,
     64'h2000000006B636F,
     64'h6C632D6465786966,
     64'h1B0000000C000000,
     64'h300000000006B63,
     64'h6F6C635F73756263,
     64'hC50100000B000000,
     64'h30000000065CD1D,
     64'h5300000004000000,
     64'h300000000000000,
     64'hB801000004000000,
     64'h300000000006B63,
     64'h6F6C635F73756263,
     64'h100000002000000,
     64'h100000073010000,
     64'h400000003000000,
     64'hC000000A6010000,
     64'h400000003000000,
     64'h6C6F72746E6F63,
     64'h8201000008000000,
     64'h300000000100000,
     64'h1022E010000,
     64'h800000003000000,
     64'h300000002000000,
     64'h1D01000008000000,
     64'h300000000000000,
     64'h6568636163003065,
     64'h6863616365766973,
     64'h756C636E692C6576,
     64'h696669731B000000,
     64'h1D00000003000000,
     64'h9801000000000000,
     64'h300000000000800,
     64'h8500000004000000,
     64'h300000000040000,
     64'h7800000004000000,
     64'h300000002000000,
     64'h8C01000004000000,
     64'h300000040000000,
     64'h6500000004000000,
     64'h300000000000000,
     64'h3030303031303240,
     64'h72656C6C6F72746E,
     64'h6F632D6568636163,
     64'h100000002000000,
     64'h6C6F72746E6F63,
     64'h8201000008000000,
     64'h300000000100000,
     64'h1000002E010000,
     64'h800000003000000,
     64'h3030303140,
     64'h6765722D73736572,
     64'h6464612D746F6F62,
     64'h10000007B010000,
     64'h3000000,
     64'h7375622D656C70,
     64'h6D697300636F732D,
     64'h6472617970696863,
     64'h2C7261622D626375,
     64'h1B00000020000000,
     64'h300000001000000,
     64'hF00000004000000,
     64'h300000001000000,
     64'h4000000,
     64'h300000000636F73,
     64'h100000002000000,
     64'h200000073010000,
     64'h400000003000000,
     64'h1000000080,
     64'h2E01000008000000,
     64'h300000000007972,
     64'h6F6D656DA6000000,
     64'h700000003000000,
     64'h30303030303030,
     64'h384079726F6D656D,
     64'h100000002000000,
     64'h300000073010000,
     64'h400000003000000,
     64'h64656C62,
     64'h617369643C010000,
     64'h900000003000000,
     64'h10000000008,
     64'h2E01000008000000,
     64'h300000000007972,
     64'h6F6D656DA6000000,
     64'h700000003000000,
     64'h303030303030,
     64'h384079726F6D656D,
     64'h100000002000000,
     64'h3066697468,
     64'h2C6263751B000000,
     64'hA00000003000000,
     64'h66697468,
     64'h100000002000000,
     64'h200000002000000,
     64'h400000073010000,
     64'h400000003000000,
     64'h5E01000000000000,
     64'h300000000006374,
     64'h6E692D7570632C76,
     64'h637369721B000000,
     64'hF00000003000000,
     64'h10000004D010000,
     64'h400000003000000,
     64'h72656C6C,
     64'h6F72746E6F632D74,
     64'h7075727265746E69,
     64'h100000043010000,
     64'h3000000,
     64'h20A1070040000000,
     64'h400000003000000,
     64'h79616B6F,
     64'h3C01000005000000,
     64'h30000000073627A,
     64'h5F62627A5F61627A,
     64'h5F68667A5F643436,
     64'h65767A5F62323135,
     64'h6C767A5F6D706869,
     64'h7A5F6965636E6566,
     64'h697A5F727363697A,
     64'h7662636466616D69,
     64'h3436767232010000,
     64'h4000000003000000,
     64'h2E010000,
     64'h400000003000000,
     64'h10000001D010000,
     64'h400000003000000,
     64'h393376732C76,
     64'h6373697214010000,
     64'hB00000003000000,
     64'h2000000009010000,
     64'h400000003000000,
     64'h1000000FE000000,
     64'h400000003000000,
     64'h800000F1000000,
     64'h400000003000000,
     64'h40000000E4000000,
     64'h400000003000000,
     64'h40000000D1000000,
     64'h400000003000000,
     64'hB2000000,
     64'h400000003000000,
     64'h757063A6000000,
     64'h400000003000000,
     64'h200000009B000000,
     64'h400000003000000,
     64'h100000090000000,
     64'h400000003000000,
     64'h40000083000000,
     64'h400000003000000,
     64'h4000000076000000,
     64'h400000003000000,
     64'h4000000063000000,
     64'h400000003000000,
     64'h7663736972,
     64'h656C7474756873,
     64'h2C7261622D626375,
     64'h1B00000016000000,
     64'h300000000000000,
     64'h5300000004000000,
     64'h300000000000030,
     64'h4075706301000000,
     64'h20A1070040000000,
     64'h400000003000000,
     64'hF000000,
     64'h400000003000000,
     64'h100000000000000,
     64'h400000003000000,
     64'h73757063,
     64'h100000002000000,
     64'h30303030,
     64'h32303031406C6169,
     64'h7265732F636F732F,
     64'h3400000015000000,
     64'h300000000006E65,
     64'h736F686301000000,
     64'h200000000000000,
     64'h3030303032303031,
     64'h406C61697265732F,
     64'h636F732F2C000000,
     64'h1500000003000000,
     64'h73657361696C61,
     64'h100000000000000,
     64'h6472617970696863,
     64'h2C7261622D626375,
     64'h2600000011000000,
     64'h300000000000000,
     64'h7665642D64726179,
     64'h706968632C726162,
     64'h2D6263751B000000,
     64'h1500000003000000,
     64'h10000000F000000,
     64'h400000003000000,
     64'h100000000000000,
     64'h400000003000000,
     64'h1000000,
     64'h0,
     64'h0,
     64'h600B00003A020000,
     64'h10000000,
     64'h1100000028000000,
     64'h980B000038000000,
     64'hD20D0000EDFE0DD0,
     64'h1330200073,
     64'h3006307308000613,
     64'h185859300000597,
     64'hF140257334151073,
     64'h5350300001537,
     64'h5A02300B505B3,
     64'h251513FE029EE3,
     64'h5A283F81FF06F,
     64'h0,
     64'h0,
     64'h2C0006F,
     64'hFE069AE3FFC62683,
     64'h46061300D62023,
     64'h10069300458613,
     64'h380006F00050463,
     64'hF1402573020005B7,
     64'hFFDFF06F,
     64'h1050007330052073,
     64'h3045107300800513,
     64'h3445307322200513,
     64'h3030107300028863,
     64'h12F2934122D293,
     64'h301022F330551073,
     64'h405051300000517};	// @[generators/rocket-chip/src/main/scala/devices/tilelink/BootROM.scala:57:47]
  TLMonitor_58 monitor (	// @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala:27:25]
    .clock                (clock),
    .reset                (reset),
    .io_in_a_ready        (auto_in_d_ready),
    .io_in_a_valid        (auto_in_a_valid),
    .io_in_a_bits_opcode  (auto_in_a_bits_opcode),
    .io_in_a_bits_param   (auto_in_a_bits_param),
    .io_in_a_bits_size    (auto_in_a_bits_size),
    .io_in_a_bits_source  (auto_in_a_bits_source),
    .io_in_a_bits_address (auto_in_a_bits_address),
    .io_in_a_bits_mask    (auto_in_a_bits_mask),
    .io_in_a_bits_corrupt (auto_in_a_bits_corrupt),
    .io_in_d_ready        (auto_in_d_ready),
    .io_in_d_valid        (auto_in_a_valid),
    .io_in_d_bits_size    (auto_in_a_bits_size),
    .io_in_d_bits_source  (auto_in_a_bits_source)
  );
  assign auto_in_a_ready = auto_in_d_ready;	// @[generators/rocket-chip/src/main/scala/devices/tilelink/BootROM.scala:41:9]
  assign auto_in_d_valid = auto_in_a_valid;	// @[generators/rocket-chip/src/main/scala/devices/tilelink/BootROM.scala:41:9]
  assign auto_in_d_bits_size = auto_in_a_bits_size;	// @[generators/rocket-chip/src/main/scala/devices/tilelink/BootROM.scala:41:9]
  assign auto_in_d_bits_source = auto_in_a_bits_source;	// @[generators/rocket-chip/src/main/scala/devices/tilelink/BootROM.scala:41:9]
  assign auto_in_d_bits_data = (|(auto_in_a_bits_address[15:12])) ? 64'h0 : _GEN[auto_in_a_bits_address[11:3]];	// @[generators/rocket-chip/src/main/scala/devices/tilelink/BootROM.scala:41:9, :50:22, :55:34, :56:64, :57:{47,53}]
endmodule

