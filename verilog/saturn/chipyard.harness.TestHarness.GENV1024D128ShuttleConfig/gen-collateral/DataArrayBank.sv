// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module DataArrayBank(	// @[generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:11:7]
  input         clock,	// @[generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:11:7]
  output        io_read_ready,	// @[generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:12:14]
  input         io_read_valid,	// @[generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:12:14]
  input  [11:0] io_read_bits_addr,	// @[generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:12:14]
  input         io_write_valid,	// @[generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:12:14]
  input  [3:0]  io_write_bits_way_en,	// @[generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:12:14]
  input  [11:0] io_write_bits_addr,	// @[generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:12:14]
  input  [63:0] io_write_bits_data,	// @[generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:12:14]
  output [63:0] io_resp_0,	// @[generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:12:14]
  output [63:0] io_resp_1,	// @[generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:12:14]
  output [63:0] io_resp_2,	// @[generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:12:14]
  output [63:0] io_resp_3	// @[generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:12:14]
);

  wire [6:0]   array_0_MPORT_1_addr;	// @[generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:49:36]
  wire         array_0_MPORT_en;	// @[generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:41:65]
  wire [6:0]   array_0_MPORT_addr;	// @[generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:41:45]
  wire [255:0] _array_0_RW0_rdata;	// @[generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26]
  assign array_0_MPORT_addr = io_read_bits_addr[11:5];	// @[generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:41:45]
  assign array_0_MPORT_en = io_read_valid & ~io_write_valid;	// @[generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:40:22, :41:65]
  assign array_0_MPORT_1_addr = io_write_bits_addr[11:5];	// @[generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:49:36]
  array_0 array_0 (	// @[generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26]
    .RW0_addr  (io_write_valid ? array_0_MPORT_1_addr : array_0_MPORT_addr),	// @[generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26, generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:41:45, :49:36]
    .RW0_en    (array_0_MPORT_en | io_write_valid),	// @[generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26, generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:41:65]
    .RW0_clk   (clock),
    .RW0_wmode (io_write_valid),
    .RW0_wdata ({4{io_write_bits_data}}),	// @[generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:49:65]
    .RW0_rdata (_array_0_RW0_rdata),
    .RW0_wmask (io_write_bits_way_en)
  );
  assign io_read_ready = ~io_write_valid;	// @[generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:11:7, :40:22]
  assign io_resp_0 = _array_0_RW0_rdata[63:0];	// @[generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26, generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:11:7, :41:82]
  assign io_resp_1 = _array_0_RW0_rdata[127:64];	// @[generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26, generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:11:7, :41:82]
  assign io_resp_2 = _array_0_RW0_rdata[191:128];	// @[generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26, generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:11:7, :41:82]
  assign io_resp_3 = _array_0_RW0_rdata[255:192];	// @[generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26, generators/shuttle/src/main/scala/dmem/DataArrayBank.scala:11:7, :41:82]
endmodule

