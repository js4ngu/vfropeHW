// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module BitwisePipe(	// @[generators/saturn/src/main/scala/exu/int/BitwisePipe.scala:23:7]
  input  [2:0]   io_iss_op_funct3,	// @[generators/saturn/src/main/scala/exu/FunctionalUnit.scala:49:14]
  input  [5:0]   io_iss_op_funct6,	// @[generators/saturn/src/main/scala/exu/FunctionalUnit.scala:49:14]
  output         io_iss_ready,	// @[generators/saturn/src/main/scala/exu/FunctionalUnit.scala:49:14]
  output         io_write_valid,	// @[generators/saturn/src/main/scala/exu/FunctionalUnit.scala:49:14]
  output [5:0]   io_write_bits_eg,	// @[generators/saturn/src/main/scala/exu/FunctionalUnit.scala:49:14]
  output [127:0] io_write_bits_data,	// @[generators/saturn/src/main/scala/exu/FunctionalUnit.scala:49:14]
  output [127:0] io_write_bits_mask,	// @[generators/saturn/src/main/scala/exu/FunctionalUnit.scala:49:14]
  input          io_pipe_0_valid,	// @[generators/saturn/src/main/scala/exu/FunctionalUnit.scala:49:14]
  input  [127:0] io_pipe_0_bits_rvs1_data,	// @[generators/saturn/src/main/scala/exu/FunctionalUnit.scala:49:14]
  input  [127:0] io_pipe_0_bits_rvs2_data,	// @[generators/saturn/src/main/scala/exu/FunctionalUnit.scala:49:14]
  input  [15:0]  io_pipe_0_bits_wmask,	// @[generators/saturn/src/main/scala/exu/FunctionalUnit.scala:49:14]
  input  [127:0] io_pipe_0_bits_full_tail_mask,	// @[generators/saturn/src/main/scala/exu/FunctionalUnit.scala:49:14]
  input  [5:0]   io_pipe_0_bits_wvd_eg,	// @[generators/saturn/src/main/scala/exu/FunctionalUnit.scala:49:14]
  input  [2:0]   io_pipe_0_bits_funct3,	// @[generators/saturn/src/main/scala/exu/FunctionalUnit.scala:49:14]
  input  [5:0]   io_pipe_0_bits_funct6,	// @[generators/saturn/src/main/scala/exu/FunctionalUnit.scala:49:14]
  input          io_pipe_0_bits_acc	// @[generators/saturn/src/main/scala/exu/FunctionalUnit.scala:49:14]
);

  wire [3:0]   _GEN = ~(io_pipe_0_bits_funct6[3:0]);	// @[generators/saturn/src/main/scala/exu/FunctionalUnit.scala:49:14, src/main/scala/chisel3/util/pla.scala:78:21]
  wire [2:0]   _decode_andMatrixOutputs_T = {_GEN[0], _GEN[1], _GEN[2]};	// @[src/main/scala/chisel3/util/pla.scala:78:21, :91:29, :98:53]
  wire [2:0]   _decode_andMatrixOutputs_T_7 = {_GEN[0], _GEN[1], io_pipe_0_bits_funct6[2]};	// @[src/main/scala/chisel3/util/pla.scala:78:21, :90:45, :91:29, :98:53]
  wire [2:0]   _GEN_0 = ~io_iss_op_funct3;	// @[src/main/scala/chisel3/util/pla.scala:78:21]
  wire [4:0]   _GEN_1 = ~(io_iss_op_funct6[5:1]);	// @[generators/saturn/src/main/scala/exu/FunctionalUnit.scala:49:14, src/main/scala/chisel3/util/pla.scala:78:21]
  wire [127:0] in1 = {128{|{&_decode_andMatrixOutputs_T, &{_GEN[3], ~(io_pipe_0_bits_funct3[1])}, &_decode_andMatrixOutputs_T_7}}} ^ io_pipe_0_bits_rvs1_data;	// @[generators/saturn/src/main/scala/exu/FunctionalUnit.scala:49:14, generators/saturn/src/main/scala/exu/int/BitwisePipe.scala:30:16, src/main/scala/chisel3/util/pla.scala:78:21, :91:29, :98:{53,70}, :114:{19,36}]
  assign io_iss_ready = |{&{io_iss_op_funct6[0], _GEN_1[0], _GEN_1[1], _GEN_1[3], _GEN_1[4], _GEN_0[0], _GEN_0[1]}, &{io_iss_op_funct6[0], _GEN_1[0], _GEN_1[1], _GEN_1[2], _GEN_1[3], _GEN_1[4], _GEN_0[0], _GEN_0[2]}, &{io_iss_op_funct6[1], _GEN_1[1], io_iss_op_funct6[3], _GEN_1[3], _GEN_1[4], _GEN_0[0], _GEN_0[1]}, &{io_iss_op_funct6[1], _GEN_1[1], _GEN_1[2], _GEN_1[3], _GEN_1[4], _GEN_0[0], io_iss_op_funct3[1], _GEN_0[2]}, &{io_iss_op_funct6[3], io_iss_op_funct6[4], _GEN_1[4], _GEN_0[0], io_iss_op_funct3[1], _GEN_0[2]}, &{io_iss_op_funct6[0], _GEN_1[1], io_iss_op_funct6[3], _GEN_1[3], _GEN_1[4], io_iss_op_funct3[0], io_iss_op_funct3[1], _GEN_0[2]}, &{io_iss_op_funct6[1], _GEN_1[1], io_iss_op_funct6[3], _GEN_1[3], _GEN_1[4], io_iss_op_funct3[0], io_iss_op_funct3[1], _GEN_0[2]}};	// @[generators/saturn/src/main/scala/exu/int/BitwisePipe.scala:23:7, src/main/scala/chisel3/util/pla.scala:78:21, :90:45, :91:29, :98:{53,70}, :114:{19,36}]
  assign io_write_valid = io_pipe_0_valid;	// @[generators/saturn/src/main/scala/exu/int/BitwisePipe.scala:23:7]
  assign io_write_bits_eg = io_pipe_0_bits_wvd_eg;	// @[generators/saturn/src/main/scala/exu/int/BitwisePipe.scala:23:7]
  assign io_write_bits_data = {128{|{&{io_pipe_0_bits_funct6[0], io_pipe_0_bits_funct6[2]}, &{io_pipe_0_bits_funct6[1], io_pipe_0_bits_funct6[2]}}}} ^ (((|{&_decode_andMatrixOutputs_T, &{io_pipe_0_bits_funct6[0], _GEN[1]}}) ? in1 & io_pipe_0_bits_rvs2_data : 128'h0) | ((|{&{_GEN[0], io_pipe_0_bits_funct6[1]}, &_decode_andMatrixOutputs_T_7}) ? in1 | io_pipe_0_bits_rvs2_data : 128'h0) | ((&{io_pipe_0_bits_funct6[0], io_pipe_0_bits_funct6[1]}) ? in1 ^ io_pipe_0_bits_rvs2_data : 128'h0));	// @[generators/saturn/src/main/scala/exu/int/BitwisePipe.scala:23:7, :30:16, :33:29, :34:29, :35:29, :37:16, src/main/scala/chisel3/util/Mux.scala:30:73, src/main/scala/chisel3/util/pla.scala:78:21, :90:45, :91:29, :98:{53,70}, :114:{19,36}]
  assign io_write_bits_mask = (io_pipe_0_bits_funct3 == 3'h2 | io_pipe_0_bits_funct3 == 3'h6) & ~io_pipe_0_bits_acc ? io_pipe_0_bits_full_tail_mask : {{8{io_pipe_0_bits_wmask[15]}}, {8{io_pipe_0_bits_wmask[14]}}, {8{io_pipe_0_bits_wmask[13]}}, {8{io_pipe_0_bits_wmask[12]}}, {8{io_pipe_0_bits_wmask[11]}}, {8{io_pipe_0_bits_wmask[10]}}, {8{io_pipe_0_bits_wmask[9]}}, {8{io_pipe_0_bits_wmask[8]}}, {8{io_pipe_0_bits_wmask[7]}}, {8{io_pipe_0_bits_wmask[6]}}, {8{io_pipe_0_bits_wmask[5]}}, {8{io_pipe_0_bits_wmask[4]}}, {8{io_pipe_0_bits_wmask[3]}}, {8{io_pipe_0_bits_wmask[2]}}, {8{io_pipe_0_bits_wmask[1]}}, {8{io_pipe_0_bits_wmask[0]}}};	// @[generators/rocket-chip/src/main/scala/util/package.scala:16:47, :81:59, generators/saturn/src/main/scala/exu/int/BitwisePipe.scala:23:7, :42:{28,51,54}, :44:20]
endmodule

