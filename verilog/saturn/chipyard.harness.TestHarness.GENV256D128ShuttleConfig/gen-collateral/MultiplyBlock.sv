// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module MultiplyBlock(	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:127:7]
  input          io_in1_signed,	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:130:14]
  input          io_in2_signed,	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:130:14]
  input  [1:0]   io_eew,	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:130:14]
  input  [63:0]  io_in1,	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:130:14]
  input  [63:0]  io_in2,	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:130:14]
  output [127:0] io_out_data	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:130:14]
);

  wire [15:0]       _mul8_3_io_out_data;	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:170:25]
  wire [15:0]       _mul8_2_io_out_data;	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:170:25]
  wire [15:0]       _mul8_1_io_out_data;	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:170:25]
  wire [15:0]       _mul8_0_io_out_data;	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:170:25]
  wire [31:0]       _mul16_1_io_out_data;	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:158:25]
  wire [31:0]       _mul16_0_io_out_data;	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:158:25]
  wire [63:0]       _mul32_io_out_data;	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:147:23]
  wire [127:0]      _mul64_io_out_data;	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:141:23]
  wire              _GEN = io_eew == 2'h0;	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:177:18]
  wire              _GEN_0 = io_eew == 2'h1;	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:196:23]
  wire [3:0][63:0]  _GEN_1 = {{io_in1}, {{{32{io_in1_signed & io_in1[31]}}, io_in1[31:0]}}, {{32'h0, {16{io_in1_signed & io_in1[15]}}, io_in1[15:0]}}, {{48'h0, {8{io_in1_signed & io_in1[7]}}, io_in1[7:0]}}};	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:144:18, :177:{18,27}, :184:{22,33,51,60,72}, :196:{23,32}, :199:{22,33,52,61,74}, :207:{23,32}, :208:{22,28,33,52,61,74}]
  wire [3:0][63:0]  _GEN_2 = {{io_in2}, {{{32{io_in2_signed & io_in2[31]}}, io_in2[31:0]}}, {{32'h0, {16{io_in2_signed & io_in2[15]}}, io_in2[15:0]}}, {{48'h0, {8{io_in2_signed & io_in2[7]}}, io_in2[7:0]}}};	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:145:18, :177:{18,27}, :184:22, :185:{22,33,51,60,72}, :196:{23,32}, :200:{22,33,52,61,74}, :207:{23,32}, :208:33, :209:{22,28,33,52,61,74}]
  wire [3:0][127:0] _GEN_3 = {{_mul64_io_out_data}, {{_mul32_io_out_data, _mul64_io_out_data[63:0]}}, {{_mul16_1_io_out_data, _mul32_io_out_data[31:0], _mul16_0_io_out_data, _mul64_io_out_data[31:0]}}, {{_mul8_3_io_out_data, _mul16_1_io_out_data[15:0], _mul8_2_io_out_data, _mul32_io_out_data[15:0], _mul8_1_io_out_data, _mul16_0_io_out_data[15:0], _mul8_0_io_out_data, _mul64_io_out_data[15:0]}}};	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:141:23, :147:23, :158:25, :170:25, :177:{18,27}, :187:{21,27}, :188:49, :190:46, :192:49, :194:46, :196:{23,32}, :202:{21,27}, :203:46, :205:46, :207:{23,32}, :211:{21,27}, :212:46, :215:21]
  Multiplier mul64 (	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:141:23]
    .io_in1_signed (io_in1_signed),
    .io_in2_signed (io_in2_signed),
    .io_in1        (_GEN_1[io_eew]),	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:144:18, :177:{18,27}, :184:22, :196:{23,32}, :199:22, :207:{23,32}, :208:22]
    .io_in2        (_GEN_2[io_eew]),	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:145:18, :177:{18,27}, :185:22, :196:{23,32}, :200:22, :207:{23,32}, :209:22]
    .io_out_data   (_mul64_io_out_data)
  );
  Multiplier_1 mul32 (	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:147:23]
    .io_in1_signed (io_in1_signed),
    .io_in2_signed (io_in2_signed),
    .io_in1        (_GEN ? {16'h0, {8{io_in1_signed & io_in1[39]}}, io_in1[39:32]} : _GEN_0 ? {{16{io_in1_signed & io_in1[47]}}, io_in1[47:32]} : io_in1[63:32]),	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:150:{18,27}, :177:{18,27}, :180:{22,33,51,60,73}, :196:{23,32}, :197:{22,28,33,52,61,74}]
    .io_in2        (_GEN ? {16'h0, {8{io_in2_signed & io_in2[39]}}, io_in2[39:32]} : _GEN_0 ? {{16{io_in2_signed & io_in2[47]}}, io_in2[47:32]} : io_in2[63:32]),	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:151:{18,27}, :177:{18,27}, :181:{22,33,51,60,73}, :196:{23,32}, :197:33, :198:{22,28,33,52,61,74}]
    .io_out_data   (_mul32_io_out_data)
  );
  Multiplier_2 mul16_0 (	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:158:25]
    .io_in1_signed (io_in1_signed),
    .io_in2_signed (io_in2_signed),
    .io_in1        (_GEN ? {{8{io_in1_signed & io_in1[23]}}, io_in1[23:16]} : io_in1[31:16]),	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:156:25, :161:20, :177:{18,27}, :182:{25,31,36,54,63,76}]
    .io_in2        (_GEN ? {{8{io_in2_signed & io_in2[23]}}, io_in2[23:16]} : io_in2[31:16]),	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:157:25, :162:20, :177:{18,27}, :183:{25,31,36,54,63,76}]
    .io_out_data   (_mul16_0_io_out_data)
  );
  Multiplier_2 mul16_1 (	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:158:25]
    .io_in1_signed (io_in1_signed),
    .io_in2_signed (io_in2_signed),
    .io_in1        (_GEN ? {{8{io_in1_signed & io_in1[55]}}, io_in1[55:48]} : io_in1[63:48]),	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:156:25, :161:20, :177:{18,27}, :178:{25,31,36,54,63,76}]
    .io_in2        (_GEN ? {{8{io_in2_signed & io_in2[55]}}, io_in2[55:48]} : io_in2[63:48]),	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:157:25, :162:20, :177:{18,27}, :179:{25,31,36,54,63,76}]
    .io_out_data   (_mul16_1_io_out_data)
  );
  Multiplier_4 mul8_0 (	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:170:25]
    .io_in1_signed (io_in1_signed),
    .io_in2_signed (io_in2_signed),
    .io_in1        (io_in1[15:8]),	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:168:25]
    .io_in2        (io_in2[15:8]),	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:169:25]
    .io_out_data   (_mul8_0_io_out_data)
  );
  Multiplier_4 mul8_1 (	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:170:25]
    .io_in1_signed (io_in1_signed),
    .io_in2_signed (io_in2_signed),
    .io_in1        (io_in1[31:24]),	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:168:25]
    .io_in2        (io_in2[31:24]),	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:169:25]
    .io_out_data   (_mul8_1_io_out_data)
  );
  Multiplier_4 mul8_2 (	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:170:25]
    .io_in1_signed (io_in1_signed),
    .io_in2_signed (io_in2_signed),
    .io_in1        (io_in1[47:40]),	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:168:25]
    .io_in2        (io_in2[47:40]),	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:169:25]
    .io_out_data   (_mul8_2_io_out_data)
  );
  Multiplier_4 mul8_3 (	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:170:25]
    .io_in1_signed (io_in1_signed),
    .io_in2_signed (io_in2_signed),
    .io_in1        (io_in1[63:56]),	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:168:25]
    .io_in2        (io_in2[63:56]),	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:169:25]
    .io_out_data   (_mul8_3_io_out_data)
  );
  assign io_out_data = _GEN_3[io_eew];	// @[generators/saturn/src/main/scala/exu/int/SegmentedMultiplyPipe.scala:127:7, :177:{18,27}, :187:21, :196:{23,32}, :202:21, :207:{23,32}, :211:21, :215:21]
endmodule

