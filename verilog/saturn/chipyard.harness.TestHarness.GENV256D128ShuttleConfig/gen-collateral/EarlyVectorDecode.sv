// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module EarlyVectorDecode(	// @[generators/saturn/src/main/scala/frontend/EarlyDecode.scala:10:7]
  input  [31:0] io_inst,	// @[generators/rocket-chip/src/main/scala/rocket/VectorUnit.scala:91:14]
  output        io_legal,	// @[generators/rocket-chip/src/main/scala/rocket/VectorUnit.scala:91:14]
  output        io_fp,	// @[generators/rocket-chip/src/main/scala/rocket/VectorUnit.scala:91:14]
  output        io_read_rs1,	// @[generators/rocket-chip/src/main/scala/rocket/VectorUnit.scala:91:14]
  output        io_read_rs2,	// @[generators/rocket-chip/src/main/scala/rocket/VectorUnit.scala:91:14]
  output        io_read_frs1,	// @[generators/rocket-chip/src/main/scala/rocket/VectorUnit.scala:91:14]
  output        io_write_rd,	// @[generators/rocket-chip/src/main/scala/rocket/VectorUnit.scala:91:14]
  output        io_write_frd	// @[generators/rocket-chip/src/main/scala/rocket/VectorUnit.scala:91:14]
);

  wire        v_load = io_inst[6:0] == 7'h7;	// @[generators/saturn/src/main/scala/frontend/EarlyDecode.scala:20:23, :34:23]
  wire        v_store = io_inst[6:0] == 7'h27;	// @[generators/saturn/src/main/scala/frontend/EarlyDecode.scala:20:23, :35:24]
  wire [18:0] v_arith_decode_invInputs = ~{io_inst[19:15], io_inst[24:20], io_inst[14:12], io_inst[31:26]};	// @[generators/saturn/src/main/scala/frontend/EarlyDecode.scala:22:22, :23:22, :30:23, :31:20, generators/saturn/src/main/scala/insns/Decode.scala:19:18, src/main/scala/chisel3/util/pla.scala:78:21]
  wire [58:0] _v_arith_decode_orMatrixOutputs_T =
    {&{v_arith_decode_invInputs[0], v_arith_decode_invInputs[3], v_arith_decode_invInputs[4], v_arith_decode_invInputs[5], v_arith_decode_invInputs[7]},
     &{v_arith_decode_invInputs[0], v_arith_decode_invInputs[1], v_arith_decode_invInputs[2], v_arith_decode_invInputs[3], v_arith_decode_invInputs[4], v_arith_decode_invInputs[8]},
     &{v_arith_decode_invInputs[1], v_arith_decode_invInputs[2], v_arith_decode_invInputs[3], v_arith_decode_invInputs[6], v_arith_decode_invInputs[7], v_arith_decode_invInputs[8]},
     &{v_arith_decode_invInputs[0], v_arith_decode_invInputs[1], v_arith_decode_invInputs[2], v_arith_decode_invInputs[3], v_arith_decode_invInputs[5], v_arith_decode_invInputs[8], v_arith_decode_invInputs[14], v_arith_decode_invInputs[15], v_arith_decode_invInputs[16], v_arith_decode_invInputs[17], v_arith_decode_invInputs[18]},
     &{v_arith_decode_invInputs[0], io_inst[27], v_arith_decode_invInputs[2], v_arith_decode_invInputs[4], v_arith_decode_invInputs[6], v_arith_decode_invInputs[7]},
     &{v_arith_decode_invInputs[0], io_inst[27], v_arith_decode_invInputs[2], v_arith_decode_invInputs[3], v_arith_decode_invInputs[5], v_arith_decode_invInputs[7], v_arith_decode_invInputs[8], v_arith_decode_invInputs[17]},
     &{v_arith_decode_invInputs[0], io_inst[27], v_arith_decode_invInputs[2], v_arith_decode_invInputs[3], v_arith_decode_invInputs[5], v_arith_decode_invInputs[7], v_arith_decode_invInputs[8], v_arith_decode_invInputs[18]},
     &{v_arith_decode_invInputs[0], io_inst[27], v_arith_decode_invInputs[2], v_arith_decode_invInputs[5], v_arith_decode_invInputs[6], v_arith_decode_invInputs[8], v_arith_decode_invInputs[14], v_arith_decode_invInputs[18]},
     &{v_arith_decode_invInputs[0], io_inst[27], v_arith_decode_invInputs[2], v_arith_decode_invInputs[5], v_arith_decode_invInputs[6], v_arith_decode_invInputs[8], v_arith_decode_invInputs[15], v_arith_decode_invInputs[18]},
     &{v_arith_decode_invInputs[0], io_inst[27], v_arith_decode_invInputs[2], v_arith_decode_invInputs[5], v_arith_decode_invInputs[6], v_arith_decode_invInputs[8], v_arith_decode_invInputs[17], v_arith_decode_invInputs[18]},
     &{io_inst[26], v_arith_decode_invInputs[1], io_inst[28], v_arith_decode_invInputs[3], v_arith_decode_invInputs[6], v_arith_decode_invInputs[7]},
     &{io_inst[26], io_inst[27], io_inst[28], v_arith_decode_invInputs[3], v_arith_decode_invInputs[5], v_arith_decode_invInputs[6], v_arith_decode_invInputs[8]},
     &{io_inst[26], v_arith_decode_invInputs[1], v_arith_decode_invInputs[2], io_inst[29], v_arith_decode_invInputs[4], v_arith_decode_invInputs[7]},
     &{io_inst[26], v_arith_decode_invInputs[1], v_arith_decode_invInputs[2], io_inst[29], v_arith_decode_invInputs[4], v_arith_decode_invInputs[8]},
     &{io_inst[26], v_arith_decode_invInputs[2], io_inst[29], v_arith_decode_invInputs[5], v_arith_decode_invInputs[6], v_arith_decode_invInputs[8]},
     &{v_arith_decode_invInputs[0], io_inst[28], io_inst[29], v_arith_decode_invInputs[4], v_arith_decode_invInputs[6], v_arith_decode_invInputs[7]},
     &{v_arith_decode_invInputs[1], io_inst[30], v_arith_decode_invInputs[5], v_arith_decode_invInputs[6], v_arith_decode_invInputs[7]},
     &{v_arith_decode_invInputs[2], io_inst[30], v_arith_decode_invInputs[5], v_arith_decode_invInputs[6], v_arith_decode_invInputs[7]},
     &{io_inst[27], v_arith_decode_invInputs[2], v_arith_decode_invInputs[3], io_inst[30], v_arith_decode_invInputs[5], v_arith_decode_invInputs[7], v_arith_decode_invInputs[8], v_arith_decode_invInputs[14], v_arith_decode_invInputs[15], v_arith_decode_invInputs[16], v_arith_decode_invInputs[17]},
     &{v_arith_decode_invInputs[0], v_arith_decode_invInputs[1], io_inst[29], io_inst[30], v_arith_decode_invInputs[5], v_arith_decode_invInputs[7]},
     &{v_arith_decode_invInputs[2], io_inst[29], io_inst[30], v_arith_decode_invInputs[5], v_arith_decode_invInputs[6], v_arith_decode_invInputs[8]},
     &{io_inst[26], v_arith_decode_invInputs[2], io_inst[29], io_inst[30], v_arith_decode_invInputs[5], v_arith_decode_invInputs[7]},
     &{io_inst[26], v_arith_decode_invInputs[4], io_inst[31], v_arith_decode_invInputs[6]},
     &{io_inst[29], v_arith_decode_invInputs[4], io_inst[31], v_arith_decode_invInputs[7]},
     &{v_arith_decode_invInputs[3], v_arith_decode_invInputs[4], v_arith_decode_invInputs[5], io_inst[12], v_arith_decode_invInputs[7], v_arith_decode_invInputs[8]},
     &{v_arith_decode_invInputs[0], v_arith_decode_invInputs[2], io_inst[29], v_arith_decode_invInputs[4], io_inst[12], v_arith_decode_invInputs[7]},
     &{v_arith_decode_invInputs[0], v_arith_decode_invInputs[1], io_inst[31], io_inst[12], v_arith_decode_invInputs[7]},
     &{io_inst[28], io_inst[29], io_inst[31], io_inst[12], v_arith_decode_invInputs[7]},
     &{v_arith_decode_invInputs[0], v_arith_decode_invInputs[3], io_inst[30], io_inst[31], io_inst[12], v_arith_decode_invInputs[7]},
     &{v_arith_decode_invInputs[2], v_arith_decode_invInputs[3], io_inst[30], io_inst[31], io_inst[12], v_arith_decode_invInputs[7], v_arith_decode_invInputs[8]},
     &{v_arith_decode_invInputs[3], v_arith_decode_invInputs[4], v_arith_decode_invInputs[6], io_inst[13], v_arith_decode_invInputs[8]},
     &{io_inst[26], io_inst[27], v_arith_decode_invInputs[2], v_arith_decode_invInputs[4], v_arith_decode_invInputs[5], io_inst[13], v_arith_decode_invInputs[8]},
     &{v_arith_decode_invInputs[2], io_inst[29], v_arith_decode_invInputs[4], v_arith_decode_invInputs[5], v_arith_decode_invInputs[6], io_inst[13]},
     &{io_inst[26], io_inst[27], io_inst[28], io_inst[30], v_arith_decode_invInputs[5], io_inst[13], v_arith_decode_invInputs[8]},
     &{io_inst[28], io_inst[29], io_inst[30], v_arith_decode_invInputs[5], io_inst[13], v_arith_decode_invInputs[8]},
     &{v_arith_decode_invInputs[3], io_inst[31], v_arith_decode_invInputs[6], io_inst[13]},
     &{io_inst[26], io_inst[27], io_inst[31], v_arith_decode_invInputs[6], io_inst[13]},
     &{io_inst[26], io_inst[28], io_inst[31], v_arith_decode_invInputs[6], io_inst[13]},
     &{io_inst[26], v_arith_decode_invInputs[1], io_inst[28], v_arith_decode_invInputs[3], io_inst[31], io_inst[13], v_arith_decode_invInputs[8]},
     &{io_inst[26], io_inst[28], v_arith_decode_invInputs[4], io_inst[31], io_inst[13], v_arith_decode_invInputs[8]},
     &{v_arith_decode_invInputs[0], io_inst[30], io_inst[31], v_arith_decode_invInputs[6], io_inst[13]},
     &{io_inst[27], io_inst[29], v_arith_decode_invInputs[4], io_inst[12], io_inst[13], v_arith_decode_invInputs[8]},
     &{v_arith_decode_invInputs[0], io_inst[28], io_inst[29], v_arith_decode_invInputs[4], io_inst[12], io_inst[13], v_arith_decode_invInputs[8]},
     &{v_arith_decode_invInputs[1], io_inst[30], v_arith_decode_invInputs[5], io_inst[12], io_inst[13], v_arith_decode_invInputs[8]},
     &{v_arith_decode_invInputs[1], v_arith_decode_invInputs[2], v_arith_decode_invInputs[4], io_inst[31], io_inst[12], io_inst[13], v_arith_decode_invInputs[8]},
     &{io_inst[26], v_arith_decode_invInputs[3], v_arith_decode_invInputs[4], v_arith_decode_invInputs[6], v_arith_decode_invInputs[7], io_inst[14]},
     &{io_inst[27], io_inst[29], v_arith_decode_invInputs[4], v_arith_decode_invInputs[5], v_arith_decode_invInputs[6], io_inst[14]},
     &{io_inst[27], io_inst[29], v_arith_decode_invInputs[5], v_arith_decode_invInputs[6], v_arith_decode_invInputs[7], io_inst[14]},
     &{io_inst[27], io_inst[28], io_inst[29], v_arith_decode_invInputs[4], v_arith_decode_invInputs[7], io_inst[14]},
     &{v_arith_decode_invInputs[0], v_arith_decode_invInputs[1], v_arith_decode_invInputs[2], v_arith_decode_invInputs[3], io_inst[30], v_arith_decode_invInputs[5], v_arith_decode_invInputs[6], io_inst[14], v_arith_decode_invInputs[9], v_arith_decode_invInputs[10], v_arith_decode_invInputs[11], v_arith_decode_invInputs[12], v_arith_decode_invInputs[13]},
     &{io_inst[26], io_inst[27], io_inst[28], io_inst[30], v_arith_decode_invInputs[5], v_arith_decode_invInputs[7], io_inst[14]},
     &{io_inst[26], io_inst[29], io_inst[30], v_arith_decode_invInputs[5], v_arith_decode_invInputs[7], io_inst[14]},
     &{v_arith_decode_invInputs[1], v_arith_decode_invInputs[2], v_arith_decode_invInputs[4], io_inst[31], v_arith_decode_invInputs[7], io_inst[14]},
     &{io_inst[26], io_inst[27], io_inst[28], v_arith_decode_invInputs[4], io_inst[31], v_arith_decode_invInputs[7], io_inst[14]},
     &{v_arith_decode_invInputs[0], v_arith_decode_invInputs[1], v_arith_decode_invInputs[2], io_inst[12], v_arith_decode_invInputs[7], io_inst[14], v_arith_decode_invInputs[9], v_arith_decode_invInputs[10], v_arith_decode_invInputs[11], v_arith_decode_invInputs[12], v_arith_decode_invInputs[13]},
     &{v_arith_decode_invInputs[0], v_arith_decode_invInputs[1], io_inst[28], io_inst[30], v_arith_decode_invInputs[5], v_arith_decode_invInputs[6], v_arith_decode_invInputs[8], io_inst[15], v_arith_decode_invInputs[15], v_arith_decode_invInputs[16], v_arith_decode_invInputs[17]},
     &{v_arith_decode_invInputs[0], v_arith_decode_invInputs[1], io_inst[28], io_inst[30], v_arith_decode_invInputs[5], v_arith_decode_invInputs[6], v_arith_decode_invInputs[8], io_inst[16], v_arith_decode_invInputs[16], v_arith_decode_invInputs[17], v_arith_decode_invInputs[18]},
     &{io_inst[27], v_arith_decode_invInputs[2], v_arith_decode_invInputs[3], io_inst[30], v_arith_decode_invInputs[5], v_arith_decode_invInputs[7], v_arith_decode_invInputs[8], v_arith_decode_invInputs[15], io_inst[17], v_arith_decode_invInputs[17], v_arith_decode_invInputs[18]},
     &{v_arith_decode_invInputs[0], v_arith_decode_invInputs[1], io_inst[30], v_arith_decode_invInputs[5], v_arith_decode_invInputs[6], v_arith_decode_invInputs[8], v_arith_decode_invInputs[15], v_arith_decode_invInputs[16], v_arith_decode_invInputs[17], io_inst[19]}};	// @[src/main/scala/chisel3/util/pla.scala:78:21, :90:45, :91:29, :98:{53,70}, :114:19]
  wire        v_arith = io_inst[6:0] == 7'h57 & io_inst[14:12] != 3'h7 & (|_v_arith_decode_orMatrixOutputs_T);	// @[generators/saturn/src/main/scala/frontend/EarlyDecode.scala:20:23, :22:22, :34:23, :36:{24,48,56}, src/main/scala/chisel3/util/pla.scala:114:{19,36}]
  wire        _GEN = v_load | v_store;	// @[generators/saturn/src/main/scala/frontend/EarlyDecode.scala:34:23, :35:24, :38:16]
  wire        _GEN_0 = io_inst[24:20] == 5'h0 | io_inst[24:20] == 5'h8 | io_inst[24:20] == 5'hB;	// @[generators/rocket-chip/src/main/scala/util/package.scala:16:47, :81:59, generators/saturn/src/main/scala/frontend/EarlyDecode.scala:23:22]
  wire        _GEN_1 = ~_GEN & v_arith & io_inst[14:12] == 3'h5;	// @[generators/rocket-chip/src/main/scala/util/package.scala:16:47, generators/saturn/src/main/scala/frontend/EarlyDecode.scala:16:16, :22:22, :36:56, :38:{16,28}, :48:25, :51:28]
  assign io_legal = _GEN ? ~(io_inst[28] | io_inst[27:26] == 2'h0 & (v_store & ~_GEN_0 | v_load & ~(_GEN_0 | io_inst[24:20] == 5'h10))) & ~(io_inst[28]) & (io_inst[14:12] == 3'h0 | io_inst[14:12] == 3'h5 | io_inst[14:12] == 3'h6 | (&(io_inst[14:12]))) : v_arith;	// @[generators/rocket-chip/src/main/scala/util/package.scala:16:47, :81:59, generators/saturn/src/main/scala/frontend/EarlyDecode.scala:10:7, :22:22, :23:22, :26:20, :27:20, :34:23, :35:24, :36:56, :38:{16,28}, :39:{14,21}, :40:20, :41:17, :42:{20,23,82,93}, :43:{21,24,74,85}, :45:{24,35}, :48:25]
  assign io_fp = _GEN_1;	// @[generators/saturn/src/main/scala/frontend/EarlyDecode.scala:10:7, :16:16, :38:28, :48:25]
  assign io_read_rs1 = _GEN | v_arith & (io_inst[14:12] == 3'h4 | io_inst[14:12] == 3'h6);	// @[generators/rocket-chip/src/main/scala/util/package.scala:16:47, :81:59, generators/saturn/src/main/scala/frontend/EarlyDecode.scala:10:7, :14:15, :22:22, :36:56, :38:{16,28}, :46:17, :48:25, :50:17]
  assign io_read_rs2 = _GEN & io_inst[27:26] == 2'h2;	// @[generators/saturn/src/main/scala/frontend/EarlyDecode.scala:10:7, :15:15, :26:20, :38:{16,28}, :47:{17,24}]
  assign io_read_frs1 = _GEN_1;	// @[generators/saturn/src/main/scala/frontend/EarlyDecode.scala:10:7, :16:16, :38:28, :48:25]
  assign io_write_rd = ~_GEN & v_arith & io_inst[14:12] == 3'h2 & io_inst[31:26] == 6'h10;	// @[generators/saturn/src/main/scala/frontend/EarlyDecode.scala:10:7, :16:16, :17:15, :22:22, :30:23, :36:56, :38:{16,28}, :48:25, :52:{27,58}]
  assign io_write_frd = ~_GEN & v_arith & io_inst[14:12] == 3'h1 & io_inst[31:26] == 6'h10;	// @[generators/saturn/src/main/scala/frontend/EarlyDecode.scala:10:7, :16:16, :18:16, :22:22, :30:23, :36:56, :38:{16,28}, :48:25, :52:58, :53:{28,59}]
endmodule

