// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module TLInterface(	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:20:9]
  input          clock,	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:20:9]
  input          reset,	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:20:9]
  input          auto_out_a_ready,	// @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala:107:25]
  output         auto_out_a_valid,	// @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala:107:25]
  output [2:0]   auto_out_a_bits_opcode,	// @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala:107:25]
  output [3:0]   auto_out_a_bits_source,	// @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala:107:25]
  output [31:0]  auto_out_a_bits_address,	// @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala:107:25]
  output [15:0]  auto_out_a_bits_mask,	// @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala:107:25]
  output [127:0] auto_out_a_bits_data,	// @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala:107:25]
  input          auto_out_d_valid,	// @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala:107:25]
  input  [3:0]   auto_out_d_bits_source,	// @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala:107:25]
  input  [127:0] auto_out_d_bits_data,	// @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala:107:25]
  output         io_busy,	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:27:16]
  output         io_req_ready,	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:27:16]
  input          io_req_valid,	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:27:16]
  input  [39:0]  io_req_bits_addr,	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:27:16]
  input  [127:0] io_req_bits_data,	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:27:16]
  input  [15:0]  io_req_bits_mask,	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:27:16]
  input  [3:0]   io_req_bits_tag,	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:27:16]
  input          io_req_bits_store,	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:27:16]
  output         io_resp_valid,	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:27:16]
  output [127:0] io_resp_bits_data,	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:27:16]
  output [3:0]   io_resp_bits_tag	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:27:16]
);

  reg  [3:0] inflights;	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:33:28]
  wire       _inflights_T = auto_out_a_ready & io_req_valid;	// @[src/main/scala/chisel3/util/Decoupled.scala:51:35]
  always @(posedge clock) begin	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:20:9]
    if (reset)	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:20:9]
      inflights <= 4'h0;	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:33:28]
    else if (_inflights_T | auto_out_d_valid)	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:34:22, src/main/scala/chisel3/util/Decoupled.scala:51:35]
      inflights <= inflights + {3'h0, _inflights_T} - {3'h0, auto_out_d_valid};	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:33:28, :35:{30,43}, src/main/scala/chisel3/util/Decoupled.scala:51:35]
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:20:9]
    `ifdef FIRRTL_BEFORE_INITIAL	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:20:9]
      `FIRRTL_BEFORE_INITIAL	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:20:9]
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:0];	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:20:9]
    initial begin	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:20:9]
      `ifdef INIT_RANDOM_PROLOG_	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:20:9]
        `INIT_RANDOM_PROLOG_	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:20:9]
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:20:9]
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:20:9]
        inflights = _RANDOM[/*Zero width*/ 1'b0][3:0];	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:20:9, :33:28]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:20:9]
      `FIRRTL_AFTER_INITIAL	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:20:9]
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign auto_out_a_valid = io_req_valid;	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:20:9]
  assign auto_out_a_bits_opcode = io_req_bits_store ? 3'h1 : 3'h4;	// @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala:92:28, generators/rocket-chip/src/main/scala/tilelink/Edges.scala:501:15, generators/saturn/src/main/scala/mem/TLInterface.scala:20:9, :41:22]
  assign auto_out_a_bits_source = io_req_bits_tag;	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:20:9]
  assign auto_out_a_bits_address = {io_req_bits_addr[31:4], 4'h0};	// @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala:505:15, generators/saturn/src/main/scala/mem/TLInterface.scala:20:9, :33:28, :41:22]
  assign auto_out_a_bits_mask = io_req_bits_store ? io_req_bits_mask : 16'hFFFF;	// @[generators/rocket-chip/src/main/scala/util/Misc.scala:222:10, generators/saturn/src/main/scala/mem/TLInterface.scala:20:9, :41:22]
  assign auto_out_a_bits_data = io_req_bits_store ? io_req_bits_data : 128'h0;	// @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala:469:15, generators/saturn/src/main/scala/mem/TLInterface.scala:20:9, :41:22]
  assign io_busy = |inflights;	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:20:9, :33:28, :37:26]
  assign io_req_ready = auto_out_a_ready;	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:20:9]
  assign io_resp_valid = auto_out_d_valid;	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:20:9]
  assign io_resp_bits_data = auto_out_d_bits_data;	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:20:9]
  assign io_resp_bits_tag = auto_out_d_bits_source;	// @[generators/saturn/src/main/scala/mem/TLInterface.scala:20:9]
endmodule

