// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module IssueQueue_2(	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:12:7]
  output        io_enq_ready,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  input         io_enq_valid,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  input  [31:0] io_enq_bits_bits,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  input  [8:0]  io_enq_bits_vconfig_vl,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  input  [2:0]  io_enq_bits_vconfig_vtype_vsew,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  input         io_enq_bits_vconfig_vtype_vlmul_sign,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  input  [1:0]  io_enq_bits_vconfig_vtype_vlmul_mag,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  input  [7:0]  io_enq_bits_vstart,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  input  [63:0] io_enq_bits_rs1_data,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  input  [4:0]  io_enq_bits_vat,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  input  [1:0]  io_enq_bits_emul,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  input         io_enq_bits_rs1_is_rs2,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  input         io_enq_bits_renv2,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  input         io_enq_bits_renvm,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  input         io_enq_bits_seq,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  input         io_deq_ready,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  output        io_deq_valid,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  output [31:0] io_deq_bits_bits,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  output [8:0]  io_deq_bits_vconfig_vl,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  output [2:0]  io_deq_bits_vconfig_vtype_vsew,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  output        io_deq_bits_vconfig_vtype_vlmul_sign,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  output [1:0]  io_deq_bits_vconfig_vtype_vlmul_mag,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  output [7:0]  io_deq_bits_vstart,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  output [63:0] io_deq_bits_rs1_data,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  output [4:0]  io_deq_bits_vat,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  output [1:0]  io_deq_bits_emul,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  output        io_deq_bits_rs1_is_rs2,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  output        io_deq_bits_renv2,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  output        io_deq_bits_renvm,	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
  output        io_deq_bits_seq	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:14:14]
);

  assign io_enq_ready = io_deq_ready;	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:12:7]
  assign io_deq_valid = io_enq_valid;	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:12:7]
  assign io_deq_bits_bits = io_enq_bits_bits;	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:12:7]
  assign io_deq_bits_vconfig_vl = io_enq_bits_vconfig_vl;	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:12:7]
  assign io_deq_bits_vconfig_vtype_vsew = io_enq_bits_vconfig_vtype_vsew;	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:12:7]
  assign io_deq_bits_vconfig_vtype_vlmul_sign = io_enq_bits_vconfig_vtype_vlmul_sign;	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:12:7]
  assign io_deq_bits_vconfig_vtype_vlmul_mag = io_enq_bits_vconfig_vtype_vlmul_mag;	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:12:7]
  assign io_deq_bits_vstart = io_enq_bits_vstart;	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:12:7]
  assign io_deq_bits_rs1_data = io_enq_bits_rs1_data;	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:12:7]
  assign io_deq_bits_vat = io_enq_bits_vat;	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:12:7]
  assign io_deq_bits_emul = io_enq_bits_emul;	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:12:7]
  assign io_deq_bits_rs1_is_rs2 = io_enq_bits_rs1_is_rs2;	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:12:7]
  assign io_deq_bits_renv2 = io_enq_bits_renv2;	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:12:7]
  assign io_deq_bits_renvm = io_enq_bits_renvm;	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:12:7]
  assign io_deq_bits_seq = io_enq_bits_seq;	// @[generators/saturn/src/main/scala/backend/IssueQueue.scala:12:7]
endmodule

